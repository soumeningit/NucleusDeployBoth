import React, { useState, useMemo } from "react";
import { Link } from "react-router-dom";
import DashboardHeader from "../Components/DashboardHeader";
import {
  FiBookOpen,
  FiCheckCircle,
  FiAward,
  FiMessageSquare,
  FiZap,
} from "react-icons/fi";

// --- Mock Data ---
// In a real app, this feed would be generated by your backend and fetched via an API.
const mockActivities = [
  {
    id: 1,
    type: "enrollment",
    user: "You",
    title: "Enrolled in a new course",
    details: "Introduction to React: The Modern Way",
    timestamp: "2 hours ago",
  },
  {
    id: 2,
    type: "completion",
    user: "You",
    title: "Completed a section",
    details: "Section 2: React Components & JSX",
    timestamp: "Yesterday at 4:30 PM",
  },
  {
    id: 3,
    type: "announcement",
    user: "Nucleus Team",
    title: "New Course Available!",
    details: 'Master AI fundamentals with our new course, "AI for Beginners".',
    timestamp: "2 days ago",
  },
  {
    id: 4,
    type: "badge",
    user: "You",
    title: "Earned a new badge",
    details: "React Fundamentals",
    timestamp: "3 days ago",
  },
  {
    id: 5,
    type: "qa_post",
    user: "You",
    title: "Asked a question in",
    details: "Python for Data Science",
    timestamp: "4 days ago",
  },
];

// Helper function to get the right icon and color for each activity type
const getActivityIcon = (type) => {
  switch (type) {
    case "enrollment":
      return { icon: <FiBookOpen />, color: "bg-blue-500" };
    case "completion":
      return { icon: <FiCheckCircle />, color: "bg-green-500" };
    case "badge":
      return { icon: <FiAward />, color: "bg-yellow-500" };
    case "qa_post":
      return { icon: <FiMessageSquare />, color: "bg-purple-500" };
    case "announcement":
      return { icon: <FiZap />, color: "bg-indigo-500" };
    default:
      return { icon: <FiBookOpen />, color: "bg-slate-500" };
  }
};

// Main Page Component
function Activity() {
  const [activities, setActivities] = useState(mockActivities);
  const [activeFilter, setActiveFilter] = useState("all");

  const filteredActivities = useMemo(() => {
    if (activeFilter === "my_activity") {
      return activities.filter((activity) => activity.user === "You");
    }
    if (activeFilter === "announcements") {
      return activities.filter((activity) => activity.type === "announcement");
    }
    return activities;
  }, [activities, activeFilter]);

  const filters = [
    { id: "all", name: "All Activity" },
    { id: "my_activity", name: "My Activity" },
    { id: "announcements", name: "Announcements" },
  ];

  return (
    <div>
      <DashboardHeader title="Recent Activity" />

      <div className="mt-8">
        {/* Filter Buttons */}
        <div className="flex items-center space-x-2 bg-white p-2 rounded-lg shadow-sm max-w-md mb-8">
          {filters.map((filter) => (
            <button
              key={filter.id}
              onClick={() => setActiveFilter(filter.id)}
              className={`w-full px-4 py-2 text-sm font-medium rounded-md transition-colors
                ${
                  activeFilter === filter.id
                    ? "bg-indigo-600 text-white shadow"
                    : "text-slate-600 hover:bg-slate-100"
                }`}
            >
              {filter.name}
            </button>
          ))}
        </div>

        {/* Activity Timeline */}
        <div className="bg-white p-6 rounded-lg shadow-sm">
          {filteredActivities.length > 0 ? (
            <ol className="relative border-l border-slate-200">
              {filteredActivities.map((activity, index) => {
                const { icon, color } = getActivityIcon(activity.type);
                return (
                  <li key={activity.id} className="mb-10 ml-8">
                    <span
                      className={`absolute flex items-center justify-center w-8 h-8 ${color} rounded-full -left-4 text-white`}
                    >
                      {icon}
                    </span>
                    <div className="flex items-center justify-between">
                      <h3 className="text-lg font-semibold text-slate-900">
                        {activity.user === "You"
                          ? activity.title
                          : `${activity.user} - ${activity.title}`}
                      </h3>
                      <time className="block mb-2 text-sm font-normal leading-none text-slate-400">
                        {activity.timestamp}
                      </time>
                    </div>
                    <p className="text-base font-normal text-slate-600">
                      {activity.details}
                    </p>
                  </li>
                );
              })}
            </ol>
          ) : (
            // Empty State
            <div className="text-center py-12">
              <FiBookOpen size={48} className="mx-auto text-slate-400" />
              <h3 className="mt-4 text-xl font-bold text-slate-800">
                No Activity Yet
              </h3>
              <p className="mt-2 text-slate-500">
                Your recent activity will appear here as you learn and interact.
              </p>
              <Link
                to="/dashboard/my-courses"
                className="mt-6 inline-block bg-indigo-600 text-white font-semibold py-2 px-5 rounded-md hover:bg-indigo-700 transition-colors"
              >
                Go to My Courses
              </Link>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}

export default Activity;
